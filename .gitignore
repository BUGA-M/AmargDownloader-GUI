# Generated by Cargo
# will have compiled files and executables
/target/
**/target/

# Generated by Tauri
# will have schema files for capabilities auto-completion
/gen/
**/gen/

# Tauri build output
src-tauri/target/
src-tauri/gen/

# Mobile development (iOS/Android)
src-tauri/gen/android/
src-tauri/gen/apple/

# Tauri bundle outputs
src-tauri/target/release/bundle/

# Node modules (if using a web frontend)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*

# Build outputs (depending on your frontend framework)
dist/
build/
out/

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# IDE/Editor files
.vscode/
.idea/
*.swp
*.swo
*~

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.tmp
*.temp

# Linux
*~

# Logs
*.log
logs/

# Runtime data
pids/
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# Temporary folders
tmp/
temp/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt

# Storybook build outputs
.out
.storybook-out

# Temporary files created by rust
**/*.rs.bk

# MSVC Windows builds of rustc may generate these, which store debugging information
*.pdb

# binary files 
*.exe
src-tauri/resources/ffmpeg.exe
src-tauri/resources/yt-dlp.exe
src-tauri/resources/*.exe

# Garder le .gitkeep pour maintenir le dossier
!src-tauri/resources/.gitkeep

src-tauri/2
vite.config.txt